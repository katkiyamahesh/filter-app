{"version":3,"sources":["filter.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","Catstate","CatsetState","useState","selectedCat","setSelectedCat","TotalPost","setTotalPost","currentPage","setCurrentPage","totalPages","setTotalPages","recordsPerPage","postState","setPostState","useEffect","fetch","then","response","json","catjson","catch","error","console","postApi","concat","selectedCategory","find","cat","slug","id","ok","Error","status","totalPagesFromHeader","headers","get","parseInt","numPosts","postList","React","createElement","className","name","value","onChange","e","target","map","cat_detail","key","length","postData","index","title","rendered","html","tempElement","document","innerHTML","textContent","innerText","stripHtml","excerpt","onClick","handlePreviousPage","disabled","handleNextPage","App","Fragment","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4537a857.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Filter() {\r\n    const [Catstate, CatsetState] = useState([]);\r\n    const [selectedCat, setSelectedCat] = useState('');\r\n\t// WP Total Post\r\n    const [TotalPost, setTotalPost] = useState('');\r\n\r\n    // Pagination post\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\tconst [totalPages, setTotalPages] = useState(1);\r\n    const [recordsPerPage] = useState(10);\r\n\t\r\n    const [postState, setPostState] = useState([]);\r\n\r\n    // Fetch categories\r\n    useEffect(() => {\r\n        fetch('https://dev-wpmahesh.pantheonsite.io/wp-json/wp/v2/categories')\r\n            .then((response) => response.json())\r\n            .then((catjson) => {\r\n                CatsetState(catjson);\r\n            })\r\n            .catch((error) => console.error('Error fetching categories:', error));\r\n    }, []);\r\n\r\n    // Fetch posts based on selected category\r\n    useEffect(() => {\r\n        // let postApi = 'https://dev-wpmahesh.pantheonsite.io/wp-json/wp/v2/posts';\r\n        let postApi = `https://dev-wpmahesh.pantheonsite.io/wp-json/wp/v2/posts?page=${currentPage}&per_page=${recordsPerPage}`;\r\n        if (selectedCat) {\r\n            const selectedCategory = Catstate.find((cat) => cat.slug === selectedCat);\r\n            if (selectedCategory) {\r\n                postApi += `&categories=${selectedCategory.id}`;\r\n            }\r\n        }\r\n        fetch(postApi)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! Status: ${response.status}`);\r\n                }\r\n\t\t\t\tconst totalPagesFromHeader = response.headers.get(\"x-wp-totalpages\");\r\n\t\t\t\tif (totalPagesFromHeader) {\r\n\t\t\t\t\tsetTotalPages(parseInt(totalPagesFromHeader, 10));\r\n\t\t\t\t}\r\n\t\t\t\tconst numPosts = response.headers.get('x-wp-total');\r\n\t\t\t\tsetTotalPost(numPosts);\r\n\r\n                return response.json();\r\n            })\r\n            .then((postList) => {\r\n                setPostState(postList);\r\n            })\r\n            .catch((error) => console.error('Error fetching posts:', error));\r\n    }, [currentPage, selectedCat, Catstate]);\r\n    const stripHtml = (html) => {\r\n        const tempElement = document.createElement('div');\r\n        tempElement.innerHTML = html;\r\n        return tempElement.textContent || tempElement.innerText || '';\r\n    };\r\n\r\n\tconst handleNextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-center\">Post Listing</h1>\r\n            <div className=\"totalpost\" id=\"totalpost\">\r\n                <span>{TotalPost} jobs available</span>\r\n            </div>\r\n\r\n            <div className=\"postlisting\">\r\n                <div className=\"left-side side-bar-filter\">\r\n                    <h3>Filter</h3>\r\n                    <div className=\"col-post-filter\">\r\n                        <select\r\n                            name=\"category_post\"\r\n                            value={selectedCat}\r\n                            onChange={(e) => setSelectedCat(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select Category</option>\r\n                            {Catstate.map((cat_detail) => (\r\n                                <option key={cat_detail.id} value={cat_detail.slug}>\r\n                                    {cat_detail.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"right-side post-data\">\r\n                    {postState.length > 0 ? (\r\n                        postState.map((postData, index) => (\r\n                            <div className=\"post-item\" key={postData.id || index}>\r\n                                <h3>{postData.title.rendered}</h3>\r\n                                <p>{stripHtml(postData.excerpt.rendered)}</p>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>Loading posts...</p>\r\n                    )}\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* Pagination */}\r\n\t\t\t\t\t<div className=\"post-pagination\">\r\n\t\t\t\t\t\t<a className=\"page-numbers\" onClick={handlePreviousPage} disabled={currentPage === 1}\r\n\t\t\t\t\t\t> « Previous</a>\r\n\t\t\t\t\t\t<span className=\"current-page\">{`Page ${currentPage} of ${totalPages}`}</span>\r\n\t\t\t\t\t\t<a className=\"page-numbers\" onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n\t\t\t\t\t\tNext »</a>\r\n\t\t\t\t\t</div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import React from 'react';\nimport './App.css';\nimport './filter-style.css';\nimport Filter from './filter';\n\nfunction App() {\n  return (\n    <>\n    <Filter/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}